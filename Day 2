//SWAPING ARRAY USING SINGLE POINTER APPROACH
public class Main
{
    public static void swap(int arr[],int start,int end)
    {
        if(start==end/2)
        {
            return;
        }
        int curr=arr[start];
        arr[start]=arr[end-start-1];
        arr[end-start-1]=curr;
        swap(arr,start+1,end);
        
       return ;
    }
	public static void main(String[] args) {
  
      	int[] arr = {1, 2, 3, 4, 5};
      	swap(arr,0,arr.length);
      	for(int i=0;i<arr.length;i++)
      	{
      	    System.out.print(arr[i]);
      	}
	}
}

//CHECK IF A STRING IS PALINDROME OR NOT USING RECURSION
public class Main
{
    public static boolean palindrome(String str,int start,int end)
    {
        if(start==end/2)
        {
            return true;
        }
        if(str.charAt(start) == str.charAt(end-start-1))
        {
            palindrome(str,start+1,end);
        }
        
        else{
            return false;
        }
       
        
       return true;
    }
	public static void main(String[] args) {
  
      String str1="madam";
     System.out.println(palindrome(str1,0,str1.length()));
      String str2="Sir";
     System.out.println(palindrome(str2,0,str2.length()));
      
	}
}


